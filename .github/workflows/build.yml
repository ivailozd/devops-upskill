name: Build
on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
    paths-ignore:
      - '.github/**'
jobs:
  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 17
          cache: 'maven'
      - name: Run tests
        run: mvn -B test
  static-analysis:
    needs: unit-tests
    name: Static analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 17
          cache: 'maven'
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=ivailozd_devops-upskill
  build:
    needs: static-analysis
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 17
          cache: 'maven'
      - name: Build with Maven
        run: |
          echo "PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
          mvn -B package -DskipTests --file pom.xml
      - name: Upload JAR
        uses: actions/upload-artifact@v2
        with:
          name: serving-web-content-complete-${{ env.PROJECT_VERSION }}.jar
          path: target/serving-web-content-complete-${{ env.PROJECT_VERSION }}.jar